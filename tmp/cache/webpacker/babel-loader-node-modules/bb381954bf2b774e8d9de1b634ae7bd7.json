{"ast":null,"code":"var _jsxFileName = \"/Users/joannewardell/Group-Project-for-Cox-Oldfield-Wardell/app/javascript/catalog/components/Catalog.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from 'axios';\nimport RequestList from './RequestList';\n\nvar Catalog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Catalog, _React$Component);\n\n  function Catalog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Catalog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Catalog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      requests: [],\n      budget: 0.0,\n      id: 0 //the id is never set until after at least one status is changed (i think)\n\n    };\n\n    _this.handleStatusChange = function (id) {\n      var self = _assertThisInitialized(_this);\n\n      axios.defaults.headers.common['X-Requested-With'] = \"XMLHttpRequest\";\n      axios.put('/requests/' + id + '/disapprove').then(function (response) {\n        console.log(response); //console.log('toggle status !! !  data\\n');\n\n        console.log(response.data);\n        self.setState({\n          id: response.data.id\n        });\n        self.setState({\n          status: response.data.status\n        });\n        self.setState({\n          requests: response.data.requests\n        });\n        self.setState({\n          budget: response.data.budget\n        });\n      }).catch(function (error) {//alert('cannot toggle status.> ?: ', error);\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var self = _assertThisInitialized(_this);\n\n      self.setState({\n        budget: _this.props.budget\n      });\n      console.log('here is the Catalog, is the budget there as a prop');\n      console.log(_assertThisInitialized(_this));\n      axios.defaults.headers.common['X-Requested-With'] = \"XMLHttpRequest\";\n      axios.get('/').then(function (response) {\n        console.log('here is the response data, can we get the request ids from here?');\n        console.log(response.data);\n        self.setState({\n          requests: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" Budget Remaining : \", React.createElement(CurrencyFormat, {\n        decimalScale: 2,\n        value: _this.state.budget,\n        displayType: 'text',\n        thousandSeparator: true,\n        prefix: '$',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"You have \", _this.state.requests == null ? 0 : _this.state.requests.length, \" requests. \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(RequestList, {\n        requests: _this.state.requests,\n        sort: _this.state.sort,\n        id: _this.state.id,\n        order: _this.state.order,\n        handleStatusChange: _this.handleStatusChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  return Catalog;\n}(React.Component);\n\nexport { Catalog as default };","map":{"version":3,"sources":["/Users/joannewardell/Group-Project-for-Cox-Oldfield-Wardell/app/javascript/catalog/components/Catalog.jsx"],"names":["React","CurrencyFormat","axios","RequestList","Catalog","state","requests","budget","id","handleStatusChange","self","defaults","headers","common","put","then","response","console","log","data","setState","status","catch","error","componentDidMount","props","get","render","length","sort","order","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from 'axios';\nimport RequestList from './RequestList';\n\nexport default class Catalog extends React.Component {\n\n  state = { \n    requests: [],\n    budget: 0.0,\n    id: 0\n    //the id is never set until after at least one status is changed (i think)\n  };\n\n  handleStatusChange = (id) => {\n\n    var self = this;\n\n    axios.defaults.headers.common['X-Requested-With'] = \"XMLHttpRequest\";\n\n    axios.put(\n      '/requests/'+id+'/disapprove')\n      .then(function (response) {\n        console.log(response)\n        //console.log('toggle status !! !  data\\n');\n        console.log(response.data);\n        self.setState({ id: response.data.id });\n        self.setState({ status: response.data.status });\n        self.setState({ requests: response.data.requests });\n        self.setState({ budget: response.data.budget });\n      })\n      .catch(function (error) {\n        //alert('cannot toggle status.> ?: ', error);\n      });\n  };\n\n  componentDidMount = () => {\n    var self = this;\n        self.setState({ budget : this.props.budget })\n    console.log('here is the Catalog, is the budget there as a prop')\n    console.log(this)\n    axios.defaults.headers.common['X-Requested-With'] = \"XMLHttpRequest\";\n    axios.get('/')\n      .then(function (response) {\n        console.log('here is the response data, can we get the request ids from here?')\n        console.log(response.data);\n        self.setState({ requests: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  render = () => {\n    return(\n      <div className=\"container\">\n        <p> Budget Remaining : <CurrencyFormat decimalScale={2}  value={this.state.budget} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n      </p>\n         <h3>You have {this.state.requests == null ? 0 : this.state.requests.length} requests. </h3>\n      <br/><br/>\n         <div className=\"row\">\n            <RequestList   requests={this.state.requests}\n                  sort ={this.state.sort}\n                  id={this.state.id}\n                  order={this.state.order}\n                  handleStatusChange={this.handleStatusChange}/>\n         </div>\n      </div>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}